{
	"info": {
		"_postman_id": "e802adf0-2e5e-43d3-8989-627c3bd4f9d7",
		"name": "Bootcamp",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "809897"
	},
	"item": [
		{
			"name": "Implementation Use Cases",
			"item": [
				{
					"name": "01a. OAuth Token",
					"item": [
						{
							"name": "Get OAuth Token for Resource Owner environments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"Token\", jsonData.access_token);\r",
											"var uuid = require('uuid');\r",
											"var myUUID = uuid.v4();\r",
											"pm.environment.set(\"MyGUID\", myUUID);\r",
											"pm.environment.set(\"HashedAppKey\", CryptoJS.SHA256(pm.environment.get(\"AppKey\")).toString());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CLIENT_SECRET}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CLIENT_ID}}",
											"type": "string"
										},
										{
											"key": "saveHelperData",
											"value": true,
											"type": "boolean"
										},
										{
											"key": "showPassword",
											"value": false,
											"type": "boolean"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "x-app-key",
										"value": "{{AppKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "username",
											"value": "{{Username}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "{{Password}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "password",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{HostName}}/oauth/v1/tokens",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"oauth",
										"v1",
										"tokens"
									]
								},
								"description": "Use this API to request an oAuth token when the environment is a Resource Owner environment. You can see which oAuth flow an environment supports by looking at the Environment page in the OHIP Developer Portal. For more information see (Authenticating to Oracle Hospitality Property APIs)\\[[https://docs.oracle.com/en/industries/hospitality/integration-platform/ohipu/c_oracle_hospitality_property_apis.htm#AuthenticatingToOracleHospitalityPr-1BD54F80](https://docs.oracle.com/en/industries/hospitality/integration-platform/ohipu/c_oracle_hospitality_property_apis.htm#AuthenticatingToOracleHospitalityPr-1BD54F80)\\] under the heading \"Resource Owner-Based Authentication\".\n\nTo call this API you will need:\n\n1. To know the environment is a Resource Owner environment - see above\n2. A valid ClientId and ClientSecret\n3. An integration user and its password that has been approved by the environment owner\n4. A valid application key\n    \n\nBecause of this, oAuth tokens may only be used when calling the given environment.\n\noAuth tokens expire after 60 minutes. We recommend obtaining a new oAuth token every 50 minutes, but not more frequently."
							},
							"response": []
						},
						{
							"name": "Get OAuth Token for Client Credentials environments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"postman.setEnvironmentVariable(\"Token\", jsonData.access_token);\r",
											"var uuid = require('uuid');\r",
											"var myUUID = uuid.v4();\r",
											"pm.environment.set(\"MyGUID\", myUUID);\r",
											"pm.environment.set(\"HashedAppKey\", CryptoJS.SHA256(pm.environment.get(\"AppKey\")).toString());"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{CLIENT_SECRET}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{CLIENT_ID}}",
											"type": "string"
										},
										{
											"key": "undefined",
											"type": "any"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded",
										"type": "text"
									},
									{
										"key": "x-app-key",
										"value": "{{AppKey}}",
										"type": "text"
									},
									{
										"key": "enterpriseId",
										"value": "{{EnterpriseId}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "urn:opc:hgbu:ws:__myscopes__",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{HostName}}/oauth/v1/tokens",
									"host": [
										"{{HostName}}"
									],
									"path": [
										"oauth",
										"v1",
										"tokens"
									]
								},
								"description": "Use this API to request an oAuth token when the environment is a Client Credentials environment. You can see which oAuth flow an environment supports by looking at the Environment page in the OHIP Developer Portal. For more information see (Authenticating to Oracle Hospitality Property APIs)\\[[https://docs.oracle.com/en/industries/hospitality/integration-platform/ohipu/c_oracle_hospitality_property_apis.htm#AuthenticatingToOracleHospitalityPr-1BD54F80](https://docs.oracle.com/en/industries/hospitality/integration-platform/ohipu/c_oracle_hospitality_property_apis.htm#AuthenticatingToOracleHospitalityPr-1BD54F80)\\] under the heading \"Client Credentials-Based Authentication\".\n\nTo call this API you will need:\n\n1. To know the environment is a Client Credentials environment - see above\n2. A valid ClientId and ClientSecret\n3. A valid EnterpriseId\n4. A valid application key\n    \n\nBecause of this, oAuth tokens may only be used when calling the given environment.\n\noAuth tokens expire after 60 minutes. We recommend obtaining a new oAuth token every 50 minutes, but not more frequently."
							},
							"response": []
						}
					]
				},
				{
					"name": "01b. get Business Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Set Currentdate and Currentdateplus1 variables\r",
									"var resp = pm.response.json();\r",
									"var moment = require('moment');\r",
									"\r",
									"var respBusinessDate = resp.hotels[0].businessDate;\r",
									"\r",
									"// Parse the businessDate string into a moment object\r",
									"var momentBusinessDate = moment(respBusinessDate);\r",
									"\r",
									"// Format the date as YYYY-MM-DD\r",
									"var formattedBusinessDate = momentBusinessDate.format(\"YYYY-MM-DD\");\r",
									"\r",
									"// Set the 'Currentdate' environment variable in Postman\r",
									"pm.environment.set('Currentdate', formattedBusinessDate);\r",
									"pm.environment.set('Currentdateplus1', momentBusinessDate.add(1, 'days').format((\"YYYY-MM-DD\")))\r",
									"pm.environment.set('Currentdateplus2', momentBusinessDate.add(2, 'days').format((\"YYYY-MM-DD\")))\r",
									"pm.environment.set('Currentdateplus3', momentBusinessDate.add(3, 'days').format((\"YYYY-MM-DD\")))\r",
									"pm.environment.set('Currentdateplus4', momentBusinessDate.add(4, 'days').format((\"YYYY-MM-DD\")))\r",
									"pm.environment.set('Currentdateplus5', momentBusinessDate.add(5, 'days').format((\"YYYY-MM-DD\")))\r",
									"\r",
									"var template = `\r",
									"<style type=\"text/css\">\r",
									"    .tftable {font-size:14px;color:#333333;width:100%;border-width: 1px;border-color: #87ceeb;border-collapse: collapse;}\r",
									"    .tftable th {font-size:18px;background-color:#87ceeb;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;text-align:left;}\r",
									"    .tftable tr {background-color:#ffffff;}\r",
									"    .tftable td {font-size:14px;border-width: 1px;padding: 8px;border-style: solid;border-color: #87ceeb;}\r",
									"    .tftable tr:hover {background-color:#e0ffff;}\r",
									"</style>\r",
									"\r",
									"<table class=\"tftable\" border=\"1\">\r",
									"    <tr>\r",
									"        <th>Hotel ID</th>\r",
									"        <th>Business Date</th>\r",
									"        <th>Current Date</th>\r",
									"        <th>Current Date Plus 1</th>\r",
									"        <th>Current Date Plus 2</th>\r",
									"        <th>Current Date Plus 3</th>\r",
									"        <th>Current Date Plus 4</th>\r",
									"        <th>Current Date Plus 5</th>\r",
									"    </tr>\r",
									"    \r",
									"    {{#each response.hotels}}\r",
									"        <tr>\r",
									"            <td>{{hotelId}}</td>\r",
									"            <td>{{businessDate}}</td>\r",
									"            <td>{{../environment.Currentdate}}</td>\r",
									"            <td>{{../environment.Currentdateplus1}}</td>\r",
									"            <td>{{../environment.Currentdateplus2}}</td>\r",
									"            <td>{{../environment.Currentdateplus3}}</td>\r",
									"            <td>{{../environment.Currentdateplus4}}</td>\r",
									"            <td>{{../environment.Currentdateplus5}}</td>\r",
									"        </tr>\r",
									"    {{/each}}\r",
									"</table>\r",
									"`;\r",
									"\r",
									"function constructVisualizerPayload() {\r",
									"    return {response: pm.response.json(), environment: pm.environment.toObject()}\r",
									"}\r",
									"\r",
									"pm.visualizer.set(template, constructVisualizerPayload());\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelId",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName}}/bof/v1/hotels/{{HotelId}}/businessDate",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"bof",
								"v1",
								"hotels",
								"{{HotelId}}",
								"businessDate"
							]
						},
						"description": "Since your hotel may not be on today's date we need to get the business date for your hotel and set it in the environment variables."
					},
					"response": []
				},
				{
					"name": "01c. getHotel - set currency",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/ent/config/v1/hotels/{{HotelId}}?fetchInstructions=Airports&fetchInstructions=Alternatehotels&fetchInstructions=Attraction&fetchInstructions=Contacts&fetchInstructions=Corporateinformation&fetchInstructions=Dining&fetchInstructions=Directions&fetchInstructions=EventSpaces&fetchInstructions=Feature&fetchInstructions=General&fetchInstructions=GeneralNotes&fetchInstructions=Miscellaneous&fetchInstructions=Notes&fetchInstructions=Package&fetchInstructions=Raterange&fetchInstructions=Transportation",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"ent",
								"config",
								"v1",
								"hotels",
								"{{HotelId}}"
							],
							"query": [
								{
									"key": "fetchInstructions",
									"value": "Airports"
								},
								{
									"key": "fetchInstructions",
									"value": "Alternatehotels"
								},
								{
									"key": "fetchInstructions",
									"value": "Attraction"
								},
								{
									"key": "fetchInstructions",
									"value": "Contacts"
								},
								{
									"key": "fetchInstructions",
									"value": "Corporateinformation"
								},
								{
									"key": "fetchInstructions",
									"value": "Dining"
								},
								{
									"key": "fetchInstructions",
									"value": "Directions"
								},
								{
									"key": "fetchInstructions",
									"value": "EventSpaces"
								},
								{
									"key": "fetchInstructions",
									"value": "Feature"
								},
								{
									"key": "fetchInstructions",
									"value": "General"
								},
								{
									"key": "fetchInstructions",
									"value": "GeneralNotes"
								},
								{
									"key": "fetchInstructions",
									"value": "Miscellaneous"
								},
								{
									"key": "fetchInstructions",
									"value": "Notes"
								},
								{
									"key": "fetchInstructions",
									"value": "Package"
								},
								{
									"key": "fetchInstructions",
									"value": "Raterange"
								},
								{
									"key": "fetchInstructions",
									"value": "Transportation"
								}
							]
						},
						"description": "The currency is required for later examples, so we need to run getHotel to obtain the currency for your hotel and set it in the environment variable. If the above API doesnt provide any currency code in response, that means OPERA Cloud UI has not been configured fully. Here by please manually enter environment variable \"CurrencyCode\" with hotels currency code"
					},
					"response": []
				},
				{
					"name": "02.Profile - Create Guest Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.headers.get(\"Location\").split(\"/\").pop();\r",
									"postman.setEnvironmentVariable(\"ProfileId\", data);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var data = pm.request.body;\r",
									"var body = data[data.mode];\r",
									"var jsonData = JSON.parse(body);\r",
									"\r",
									"var emailAddress = jsonData.guestDetails.emails.emailInfo[0].email.emailAddress;\r",
									"\r",
									"// Set the emailAddress in the environment variable\r",
									"pm.environment.set(\"EmailAddress\", emailAddress);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-externalSystem",
								"value": "{{externalSystemCode}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"guestDetails\": {\n        \"customer\": {\n            \"personName\": [\n                {\n                    \"givenName\": \"{{$randomFirstName}}\",\n                    \"surname\": \"{{$randomLastName}}\",\n                    \"nameTitle\": \"Mr\",\n                    \"nameType\": \"PRIMARY\",\n                    \"language\": \"E\"\n                }\n            ],\n            \"language\": \"E\"\n        },\n        \"emails\": {\n            \"emailInfo\": [\n                {\n                    \"email\": {\n                        \"emailAddress\": \"example@example.com\",\n                        \"type\": \"EMAIL\",\n                        \"typeDescription\": \"Email Address\",\n                        \"primaryInd\": true,\n                        \"orderSequence\": 1\n                    }\n                }\n            ]\n        },\n        \"profileType\": \"GUEST\",\n        \"statusCode\": \"ACTIVE\",\n        \"registeredProperty\": \"{{HotelId}}\",\n        \"markForHistory\": true\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/crm/v1/guests",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"crm",
								"v1",
								"guests"
							]
						},
						"description": "Create a guest Profile with minimum data. This is the main Guest Profile who is staying in the hotel.\n\nWithin the payload we have included Postman default variables for First name and Last name, but ensure you set the `emailAddress` to be your email address. Otherwise, you will not receive an email at step 35.\n\nAlso note that within the postman collection provided there are scripts inserted whereby from the POST response `ProfileId` will be automatically inserted into the Postman environment variables."
					},
					"response": []
				},
				{
					"name": "03.Profile - Create Company Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.headers.get(\"Location\").split(\"/\").pop();\r",
									"postman.setEnvironmentVariable(\"CompanyId\", data);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-externalSystem",
								"value": "{{externalSystemCode}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"companyDetails\": {\n    \"company\": {\n      \"companyName\": \"Bootcamp Company 15052025\"\n    },\n    \"addresses\": {\n      \"addressInfo\": [\n        {\n          \"address\": {\n            \"addressLine\": [\n              \"Europadamm 40\"\n            ],\n            \"cityName\": \"Neuss\",\n            \"postalCode\": \"41460\",\n            \"country\": {\n              \"code\": \"DE\"\n            },\n            \"language\": \"E\",\n            \"type\": \"AR ADDRESS\",\n            \"primaryInd\": false\n          }\n        }\n      ]\n    },\n    \"profileType\": \"Company\",\n    \"statusCode\": \"Active\",\n    \"registeredProperty\": \"{{HotelId}}\",\n    \"markForHistory\": false\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/crm/v1/companies",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"crm",
								"v1",
								"companies"
							]
						},
						"description": "Create Company Profile where by adding an AR address in the payload. This is required for successful checkout of the folio to Accounts Receivable. This is to show that Reservation can be linked to other Profile types as well. Please note that you can only attach maximum of one Company Profile.\n\nKindly note that there are test scripts which take Company Profile Id and inserts it into Postman environment variable `CompanyId`\n\n1. Change `companyName`and `address` as required. Not mandatory to change but Postman has default variables. Do not change the address type 'AR ADDRESS'\n    \n2. Once Company Profile is created, ensure `getProfile` API is executed so that `AR address id` is inserted into environment variables `CompanyArAddressId` and also `CompanyName`"
					},
					"response": []
				},
				{
					"name": "03a.Profile getCompanyProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-externalSystem",
								"value": "{{externalSystemCode}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/crm/v1/profiles/{{CompanyId}}?fetchInstructions=Address&fetchInstructions=Profile",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"crm",
								"v1",
								"profiles",
								"{{CompanyId}}"
							],
							"query": [
								{
									"key": "fetchInstructions",
									"value": "Address"
								},
								{
									"key": "fetchInstructions",
									"value": "Communication",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Comment",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Membership",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Preference",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Keyword",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Correspondence",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Profile"
								},
								{
									"key": "fetchInstructions",
									"value": "Indicators",
									"disabled": true
								}
							]
						},
						"description": "You created Company Profile with earlier API This AI is to ensure `getProfile` API is executed so that `AR address id` is inserted into environment variables `CompanyArAddressId` and also `CompanyName`"
					},
					"response": []
				},
				{
					"name": "04.Profile getAR Types Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-externalSystem",
								"value": "{{externalSystemCode}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/lov/v1/listOfValues/hotels/{{HotelId}}/arAccountTypes?includeInactiveFlag=false",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"lov",
								"v1",
								"listOfValues",
								"hotels",
								"{{HotelId}}",
								"arAccountTypes"
							],
							"query": [
								{
									"key": "includeInactiveFlag",
									"value": "false"
								}
							]
						},
						"description": "This API is to create an Account Receivable Number (AR Number) to the Company Profile created previously. This is required later if you want to check out the Opera Folio Window to City Ledger (Direct Billing).\n\n1. Account Receivable account types (AR Types) enable you to categorize AR accounts. The account type selected in each AR Account is used for filtering in both the application and also on reports, such as when generating an AR aging report subtotaled by account type. Account types also determine the stationery templates to use when generating statements and reminder letters for each AR account. Fetch AR types which is required to create Company AR account and set environment variable `CompanyArAccountType`"
					},
					"response": []
				},
				{
					"name": "04a. Fetch AR Number sequence",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-externalSystem",
								"value": "{{externalSystemCode}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/ent/config/v1/settings?hotelId={{HotelId}}&parameterNameWildCard=Account Picture",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"ent",
								"config",
								"v1",
								"settings"
							],
							"query": [
								{
									"key": "hotelId",
									"value": "{{HotelId}}"
								},
								{
									"key": "parameterNameWildCard",
									"value": "Account Picture"
								}
							]
						},
						"description": "This API is to create an Account Receivable Number (AR Number) to the Company Profile created previously. This is required later if you want to check out the Opera Folio Window to City Ledger (Direct Billing).\n\n1. Account Receivable account types (AR Types) enable you to categorize AR accounts. The account type selected in each AR Account is used for filtering in both the application and also on reports, such as when generating an AR aging report subtotaled by account type. Account types also determine the stationery templates to use when generating statements and reminder letters for each AR account. Fetch AR types which is required to create Company AR account and set environment variable `CompanyArAccountType`"
					},
					"response": []
				},
				{
					"name": "04b.Profile - Create AR Account for Company Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.headers.get(\"Location\").split(\"/\").pop();",
									"postman.setEnvironmentVariable(\"CompanyAccountNo\", data);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-externalSystem",
								"value": "{{externalSystemCode}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"criteria\": {\n        \"hotelId\": \"{{HotelId}}\",\n        \"accountName\": \"{{CompanyName}}\",\n        \"accountNo\": \"BOOT1505\",\n        \"profileId\": {\n            \"id\": \"{{CompanyId}}\",\n            \"idContext\": \"OPERA\",\n            \"type\": \"Profile\"\n        },\n        \"creditLimit\": {\n            \"amount\": \"100000\"\n        },\n        \"monthEndCalcYN\": false,\n        \"address\": {\n            \"type\": \"Address\",\n            \"id\": \"{{CompanyArAddressId}}\"\n        },\n        \"status\": {\n            \"restricted\": false\n        },\n        \"batchStatement\": true,\n        \"emailStatementsReminders\": false,\n        \"primary\": true,\n        \"type\": \"{{CompanyArAccountType}}\",\n        \"permanent\": true\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/ars/v1/hotels/{{HotelId}}/accounts",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"ars",
								"v1",
								"hotels",
								"{{HotelId}}",
								"accounts"
							]
						},
						"description": "This API is to create an Account Receivable Number (AR Number) to the Company Profile created previously. This is required later if you want to check out the Opera Folio Window to City Ledger (Direct Billing).\n\n1. Create Company AR Account. Create your own AR account number in the format where are three digits."
					},
					"response": []
				},
				{
					"name": "04c. Profile - getCompany Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName}}/ars/v1/accounts?hotelIds={{HotelId}}&limit=20&profileIdContext=OPERA&accountNo=BOOT1505&profileType=Company",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"ars",
								"v1",
								"accounts"
							],
							"query": [
								{
									"key": "hotelIds",
									"value": "{{HotelId}}"
								},
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "profileIdContext",
									"value": "OPERA"
								},
								{
									"key": "accountNo",
									"value": "BOOT1505"
								},
								{
									"key": "profileType",
									"value": "Company"
								}
							]
						},
						"description": "This API is to fetch Account Receivable Number (AR Number) to the Company Profile created previously. This is required later if you want to check out the Opera Folio Window to City Ledger (Direct Billing).\n\nCopy `accountNo` from 4a and insert into query parameter. Use getProfile API to check all of the above values are responded correctly. Copy `accountNo` into `CompanyAccountNo` and `accountId` into `CompanyAccountId`."
					},
					"response": []
				},
				{
					"name": "05.Profile - Create Travel Agent Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.headers.get(\"Location\").split(\"/\").pop();\r",
									"postman.setEnvironmentVariable(\"TravelAgentProfileId\", data);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-externalSystem",
								"value": "{{externalSystemCode}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"profileDetails\": {\n    \"company\": {\n      \"companyName\": \"American Express Bootcamp 150525\",\n      \"companyName2\": \"Asian travel Section\",\n      \"companyName3\": \"Far East\"\n    },\n    \"addresses\": {\n      \"addressInfo\": [\n        {\n          \"address\": {\n            \"addressLine\": [\n              \"Street 1\",\n              \"Street 2\",\n              \"Street 3\",\n              \"Street 4\"\n            ],\n            \"postalCode\": \"50887\",\n            \"country\": {\n              \"value\": \"DE\"\n            },\n            \"language\": \"E\",\n            \"type\": \"BUSINESS\",\n            \"primaryInd\":\"true\",\n            \"updateReservations\": false\n          }\n        },\n                {\n          \"address\": {\n            \"addressLine\": [\n              \"Europadamm 40\"\n            ],\n            \"cityName\": \"Neuss\",\n            \"postalCode\": \"41460\",\n            \"country\": {\n              \"code\": \"DE\"\n            },\n            \"language\": \"E\",\n            \"type\": \"AR ADDRESS\",\n            \"primaryInd\": false\n          }\n        }\n      ]\n    },\n    \"ownerCode\": \"ALL\",\n    \"telephones\": {\n      \"telephoneInfo\": [\n        {\n          \"telephone\": {\n            \"phoneTechType\": \"PHONE\",\n            \"phoneUseType\": \"BUSINESS\",\n            \"phoneNumber\": \"009654444455666\",\n            \"orderSequence\": \"1\",\n            \"primaryInd\": true\n          }\n        }\n      ]\n    },\n    \"emails\": {\n      \"emailInfo\": [\n        {\n          \"email\": {\n            \"emailAddress\": \"fake@api.com\",\n            \"type\": \"EMAIL\",\n            \"emailFormat\": \"HTML\",\n            \"primaryInd\": true,\n            \"orderSequence\": \"2\"\n          }\n        }\n      ]\n    },\n    \"profileRestrictions\": {\n      \"restricted\": false\n    },\n    \"mailingActions\": {\n      \"active\": true\n    },\n    \"privacyInfo\": {\n      \"marketResearchParticipation\": true,\n      \"infoFromThirdParty\": true,\n      \"autoEnrollLoyaltyProgram\": true,\n      \"allowPhone\": true,\n      \"allowSMS\": true,\n      \"allowEmail\": true\n    },\n    \"cashiering\": {\n      \"vATOffsetYN\": \"N\"\n    },\n    \"statusCode\": \"Active\",\n    \"requestForHotel\": \"{{HotelId}}\",\n    \"protectedBy\": \"NONE\",\n    \"profileType\": \"Agent\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/crm/v1/profiles",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"crm",
								"v1",
								"profiles"
							]
						},
						"description": "Create Travel Agent Profile with AR Address. This is to show that a Reservation can be linked to other Profile types as well.\n\nPlease note that you can only attach a maximum of one Travel Agent Profile. The `TravelAgentProfileId` is auto populated in Environment variables with Test Scripts inserted into the collection.\n\n1. Change `companyName`and `address` as required. Not mandatory to change. Do not change the address type 'AR ADDRESS'. The payload contains multiple address. This is just to show that multiple addresses can be inserted with one API call."
					},
					"response": []
				},
				{
					"name": "05a.Profile getTAProfile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-externalSystem",
								"value": "{{externalSystemCode}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/crm/v1/profiles/{{TravelAgentProfileId}}?fetchInstructions=Address&fetchInstructions=Profile",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"crm",
								"v1",
								"profiles",
								"{{TravelAgentProfileId}}"
							],
							"query": [
								{
									"key": "fetchInstructions",
									"value": "Address"
								},
								{
									"key": "fetchInstructions",
									"value": "Communication",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Comment",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Membership",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Preference",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Keyword",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Correspondence",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Profile"
								},
								{
									"key": "fetchInstructions",
									"value": "Indicators",
									"disabled": true
								}
							]
						},
						"description": "Once Travel Agent Profile is created, ensure `getProfile` API is executed so that `TA ArAddress Id` and also `CompanyName` is inserted into environment variables `TravelAgentArAddressId` & `TravelAgentName`. Note that there are 2 addresses in the response. Make sure you insert correct Address into Environment variable which has Ar Address Type linked"
					},
					"response": []
				},
				{
					"name": "06.Profile getAR Types",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-externalSystem",
								"value": "{{externalSystemCode}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/lov/v1/listOfValues/hotels/{{HotelId}}/arAccountTypes?includeInactiveFlag=false",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"lov",
								"v1",
								"listOfValues",
								"hotels",
								"{{HotelId}}",
								"arAccountTypes"
							],
							"query": [
								{
									"key": "includeInactiveFlag",
									"value": "false"
								}
							]
						},
						"description": "Account Receivable account types (AR Types) enable you to categorize AR accounts. The account type selected in each AR Account is used for filtering in both the application and also on reports, such as when generating an AR aging report subtotaled by account type.  \nAccount types also determine the stationery templates to use when generating statements and reminder letters for each AR account. Fetch AR types which is required to create Travel Agent AR account and set environment variable `TravelAgentArAccountType`."
					},
					"response": []
				},
				{
					"name": "06a. Fetch AR Number sequence",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-externalSystem",
								"value": "{{externalSystemCode}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/ent/config/v1/settings?hotelId={{HotelId}}&parameterNameWildCard=Account Picture",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"ent",
								"config",
								"v1",
								"settings"
							],
							"query": [
								{
									"key": "hotelId",
									"value": "{{HotelId}}"
								},
								{
									"key": "parameterNameWildCard",
									"value": "Account Picture"
								}
							]
						},
						"description": "Fetching of the AR Account Number sequence for creating Travel Agent AR Account in next API. The AR Account format is determined from the OPERA Control Account_Picture under the module Accounts_ Recievable. For example A respresents Alphabet and X respresents number. For example your OPERA Control is AAAAXX and your value would be like ABCD12"
					},
					"response": []
				},
				{
					"name": "06b.Profile -  Create AR Account for Travel Agent Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.headers.get(\"Location\").split(\"/\").pop();",
									"postman.setEnvironmentVariable(\"TravelAgentAccountId\", data);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-externalSystem",
								"value": "{{externalSystemCode}}",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"criteria\": {\n        \"hotelId\": \"{{HotelId}}\",\n        \"accountName\": \"{{TravelAgentName}}\",\n        \"accountNo\": \"BOTA1505\",\n        \"profileId\": {\n            \"id\": \"{{TravelAgentProfileId}}\",\n            \"idContext\": \"OPERA\",\n            \"type\": \"Profile\"\n        },\n        \"creditLimit\": {\n            \"amount\": \"100000\"\n        },\n        \"monthEndCalcYN\": false,\n        \"address\": {\n            \"type\": \"Address\",\n            \"id\": \"{{TravelAgentArAddressId}}\"\n        },\n        \"status\": {\n            \"restricted\": false\n        },\n        \"batchStatement\": true,\n        \"emailStatementsReminders\": false,\n        \"primary\": true,\n        \"type\": \"{{TravelAgentArAccountType}}\",\n        \"permanent\": true\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/ars/v1/hotels/{{HotelId}}/accounts",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"ars",
								"v1",
								"hotels",
								"{{HotelId}}",
								"accounts"
							]
						},
						"description": "Create Travel Agent AR Account. Make sure accountNo tag within the payload is updated to respective code of your choice respectiing the OPERA control value from previous step"
					},
					"response": []
				},
				{
					"name": "06c. Profile - getTA Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{HostName}}/ars/v1/accounts?hotelIds={{HotelId}}&limit=20&profileIdContext=OPERA&accountNo=BOTA1505&profileType=Travel",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"ars",
								"v1",
								"accounts"
							],
							"query": [
								{
									"key": "hotelIds",
									"value": "{{HotelId}}"
								},
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "profileIdContext",
									"value": "OPERA"
								},
								{
									"key": "accountNo",
									"value": "BOTA1505"
								},
								{
									"key": "profileType",
									"value": "Travel"
								}
							]
						},
						"description": "Copy accountNo from 6a and insert into query parameter. Use getProfile API to check all of the above values are responded correctly. Copy accountNo into TravelAgentAccountNo and accountId into TravelAgentAccountId."
					},
					"response": []
				},
				{
					"name": "07. Booking - Fetch Hotel Availability",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var moment = require('moment');\r",
									"pm.environment.set('currentdate', moment().format((\"YYYY-MM-DD\")));\r",
									"\r",
									"var moment = require('moment');\r",
									"pm.environment.set('currentdateplus1', moment().add(1,'days').format((\"YYYY-MM-DD\")));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/par/v1/hotels/{{HotelId}}/availability?adults=1&children=0&roomStayQuantity=1&limit=10&offset=0&roomStayStartDate={{Currentdate}}&roomStayEndDate={{Currentdateplus1}}",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"par",
								"v1",
								"hotels",
								"{{HotelId}}",
								"availability"
							],
							"query": [
								{
									"key": "adults",
									"value": "1"
								},
								{
									"key": "children",
									"value": "0"
								},
								{
									"key": "roomStayQuantity",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "roomStayStartDate",
									"value": "{{Currentdate}}"
								},
								{
									"key": "roomStayEndDate",
									"value": "{{Currentdateplus1}}"
								}
							]
						},
						"description": "Fetch Hotel Availability which is required for creating a Reservation. This provides available ratePlanCode, room type and room rate amount.\n\nAfter successful fetch, make sure following items are inserted into Environment variables:\n\nroomTypeinto variable RoomType  \nratePlanCodeinto variable RatePlanCode"
					},
					"response": []
				},
				{
					"name": "08. Booking getMarketCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/config/v1/marketCodes?limit=20&hotelIds={{HotelId}}&includeInactive=false",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"config",
								"v1",
								"marketCodes"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "hotelIds",
									"value": "{{HotelId}}"
								},
								{
									"key": "includeInactive",
									"value": "false"
								}
							]
						},
						"description": "Fetch MarketCode. A market code is required in each reservation and group block and is used track the room nights and revenue generated by each reservation for statistical purposes. Use this to set environment variable MarketCode"
					},
					"response": []
				},
				{
					"name": "08a. Booking getSourceCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/config/v1/hotels/{{HotelId}}/sourceCodes/?limit=20&includeInactive=false",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"config",
								"v1",
								"hotels",
								"{{HotelId}}",
								"sourceCodes",
								""
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "includeInactive",
									"value": "false"
								}
							]
						},
						"description": "Fetch SourceCode. Use source codes to manage and track the source of business at your hotel, such as mail, telephone, fax, central reservations, travel agency, and so on. OPERA Cloud maintains the source of business statistics. Just like market codes, source codes are attached to reservation records to track how the reservations come to the property. Source codes are also grouped into source groups for reporting. Every property or property chain determines the breakdown of the source information it requires. Use this to set environment variable SourceCode"
					},
					"response": []
				},
				{
					"name": "08b. Booking getBookingMedium",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/config/v1/originCodes?fetchInactive=false",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"config",
								"v1",
								"originCodes"
							],
							"query": [
								{
									"key": "fetchInactive",
									"value": "false"
								}
							]
						},
						"description": "Fetch BookingMedium (Origin Code). OPERA Cloud maintains origin of business statistics, which enables you to track reservations by setting up origin codes (the originating media source for the reservation). Just as market codes can be grouped into market groups for reporting purposes, origin codes are attached to reservation records to track how reservations come into the property. Each property or property chain determines the breakdown of the origin information it requires (for example, mail, telephone, fax, central reservations, travel agency, GDS, and so on). Use this to set environment variable BookingMedium"
					},
					"response": []
				},
				{
					"name": "08c. Booking getGuaranteeCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/config/v1/guaranteeCodes?limit=20&hotelIds={{HotelId}}&inactive=false",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"config",
								"v1",
								"guaranteeCodes"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "hotelIds",
									"value": "{{HotelId}}"
								},
								{
									"key": "inactive",
									"value": "false"
								}
							]
						},
						"description": "Fetch Guarantee Code (Reservation Type). When making a reservation, a reservation type (also called a guarantee code) must be selected for the reservation to identify if the reservation is to deduct a room from inventory. Typical reservation types for standard reservations are 6:00 PM Hold, Guaranteed by Credit Card, Guaranteed by Company, and so on. For tentative reservations, typical reservation types are Deposit Expected or Confirmation Expected,  \nNon deduct reservations are not included in the availability calculations by default, but they can be included if you select the Non-deduct Rooms Sold and the Available Rooms with Non-deduct (Rooms Sold) view options when you access the Property Availability.\n\nGroup blocks and travel agent (block) allotments must also be assigned reservation types. This provides several different combinations to cover guaranteed / deduct blocks, non-guaranteed / non-deduct blocks, or non-deduct allotments with deduct reservations. Use this to set environment variable GuaranteeCode"
					},
					"response": []
				},
				{
					"name": "08d. Booking getPaymentMethod",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/config/v1/hotelPaymentMethods?hotelIds={{HotelId}}&limit=20&offset=0",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"config",
								"v1",
								"hotelPaymentMethods"
							],
							"query": [
								{
									"key": "hotelIds",
									"value": "{{HotelId}}"
								},
								{
									"key": "limit",
									"value": "20"
								},
								{
									"key": "offset",
									"value": "0"
								}
							]
						},
						"description": "Fetch Payment Method. Use this to set environment variable PaymentMethod. Please take a payment method of your choice. You can set as Cash respective code at present as in later steps will be setting it to Credit Card"
					},
					"response": []
				},
				{
					"name": "08e. Booking - Create Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.headers.get(\"Location\").split(\"/\").pop();\r",
									"postman.setEnvironmentVariable(\"ReservationId\", data);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"reservations\": {\r\n    \"reservation\": [\r\n      {\r\n        \"reservationIdList\": [\r\n          {\r\n            \"id\": \"{{$randomBankAccountBic}}\",\r\n            \"type\": \"TaRecordLocator\"\r\n          }\r\n        ],\r\n        \"externalReferences\": [\r\n          {\r\n            \"id\": \"{{$randomBankAccountBic}}\",\r\n            \"idExtension\": 1,\r\n            \"idContext\": \"Expedia\"\r\n          }\r\n        ],\r\n        \"sourceOfSale\": {\r\n          \"sourceType\": \"PMS\",\r\n          \"sourceCode\": \"{{HotelId}}\"\r\n        },\r\n        \"roomStay\": {\r\n          \"roomRates\": [\r\n            {\r\n              \"total\": {\r\n                \"amountBeforeTax\": \"250\"\r\n              },\r\n              \"rates\": {\r\n                \"rate\": [\r\n                  {\r\n                    \"base\": {\r\n                      \"amountBeforeTax\": \"250\",\r\n                      \"currencyCode\": \"{{CurrencyCode}}\"\r\n                    },\r\n                    \"shareDistributionInstruction\": \"Full\",\r\n                    \"total\": {\r\n                      \"amountBeforeTax\": \"250\"\r\n                    },\r\n                    \"start\": \"{{Currentdate}}\",\r\n                    \"end\": \"{{Currentdateplus1}}\"\r\n                  }\r\n                ]\r\n              },\r\n              \"guestCounts\": {\r\n                \"adults\": \"1\",\r\n                \"children\": \"0\"\r\n              },\r\n              \"roomType\": \"{{RoomType}}\",\r\n              \"ratePlanCode\": \"{{RatePlanCode}}\",\r\n              \"start\": \"{{Currentdate}}\",\r\n              \"end\": \"{{Currentdateplus1}}\",\r\n              \"marketCode\": \"{{MarketCode}}\",\r\n              \"sourceCode\": \"{{SourceCode}}\",\r\n              \"numberOfUnits\": \"1\",\r\n              \"roomTypeCharged\": \"{{RoomType}}\",\r\n              \"fixedRate\": true\r\n            }\r\n          ],\r\n          \"guestCounts\": {\r\n            \"adults\": \"1\",\r\n            \"children\": \"0\"\r\n          },\r\n          \"arrivalDate\": \"{{Currentdate}}\",\r\n          \"departureDate\": \"{{Currentdateplus1}}\",\r\n          \"guarantee\": {\r\n            \"onHold\": false,\r\n            \"guaranteeCode\": \"{{GuaranteeCode}}\"\r\n          },\r\n          \"bookingMedium\": \"{{BookingMedium}}\"\r\n        },\r\n        \"reservationGuests\": [\r\n          {\r\n            \"profileInfo\": {\r\n              \"profileIdList\": {\r\n                \"id\": \"{{ProfileId}}\",\r\n                \"type\": \"Profile\"\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        \"reservationProfiles\": {\r\n          \"reservationProfile\": [\r\n            {\r\n              \"profileIdList\": [\r\n                {\r\n                  \"id\": \"{{CompanyId}}\",\r\n                  \"type\": \"Profile\"\r\n                }\r\n              ],\r\n              \"profile\": {\r\n              },\r\n              \"reservationProfileType\": \"Company\"\r\n            },\r\n            {\r\n              \"profileIdList\": [\r\n                {\r\n                  \"id\": \"{{TravelAgentProfileId}}\",\r\n                  \"type\": \"Profile\"\r\n                }\r\n              ],\r\n              \"profile\": {\r\n              },\r\n              \"reservationProfileType\": \"TravelAgent\"\r\n            }\r\n          ],\r\n          \"commissionPayoutTo\": \"TravelAgent\"\r\n        },\r\n        \"reservationPaymentMethods\": [\r\n          {\r\n            \"paymentMethod\": \"{{PaymentMethod}}\",\r\n            \"folioView\": \"1\"\r\n          }\r\n        ],\r\n        \"hotelId\": \"{{HotelId}}\",\r\n        \"reservationStatus\": \"Reserved\"\r\n      }\r\n    ]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								""
							]
						},
						"description": "Create Reservation. This API will create the Reservation. There are scripts running when you execute this API whereby the environment variable ReservationId is set automatically"
					},
					"response": []
				},
				{
					"name": "08f. Booking - getReservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}?fetchInstructions=ReservationPaymentMethods&fetchInstructions=RoutingInstructions&fetchInstructions=Preferences&fetchInstructions=Indicators&fetchInstructions=Reservation",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}"
							],
							"query": [
								{
									"key": "fetchInstructions",
									"value": "ReservationPaymentMethods"
								},
								{
									"key": "fetchInstructions",
									"value": "RoutingInstructions"
								},
								{
									"key": "fetchInstructions",
									"value": "Preferences"
								},
								{
									"key": "fetchInstructions",
									"value": "Indicators"
								},
								{
									"key": "fetchInstructions",
									"value": "Reservation"
								}
							]
						},
						"description": "Fetch Reservation. Once postReservation is executed, please check whether all required details are entered correctly with this API. Ensure the value from reservationIdList type=Confirmation is copied into environment variable Confirmationid and also id from externalReferences into ExternalReferences. Also set the emailAddress which you set with Step 3, the variable EmailAddress."
					},
					"response": []
				},
				{
					"name": "09. Booking - Create Multi Leg Reservation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.headers.get(\"Location\").split(\"/\").pop();\r",
									"postman.setEnvironmentVariable(\"ReservationId2\", data);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservations\": {\r\n        \"reservation\": [\r\n            {\r\n                \"reservationIdList\": [\r\n                    {\r\n                        \"id\": \"{{ConfirmationId}}\",\r\n                        \"type\": \"Confirmation\"\r\n                    }\r\n                ],\r\n                \"externalReferences\": [\r\n                    {\r\n                        \"id\": \"{{ExternalReferences}}\",\r\n                        \"idExtension\": 2,\r\n                        \"idContext\": \"Expedia\"\r\n                    }\r\n                ],\r\n                \"sourceOfSale\": {\r\n                    \"sourceType\": \"PMS\",\r\n                    \"sourceCode\": \"{{HotelId}}\"\r\n                },\r\n                \"roomStay\": {\r\n                    \"roomRates\": [\r\n                        {\r\n                            \"total\": {\r\n                                \"amountBeforeTax\": \"200\"\r\n                            },\r\n                            \"rates\": {\r\n                                \"rate\": [\r\n                                    {\r\n                                        \"base\": {\r\n                                            \"amountBeforeTax\": \"200\",\r\n                                            \"currencyCode\": \"{{CurrencyCode}}\"\r\n                                        },\r\n                                        \"shareDistributionInstruction\": \"Full\",\r\n                                        \"total\": {\r\n                                            \"amountBeforeTax\": \"200\"\r\n                                        },\r\n                                        \"start\": \"{{Currentdate}}\",\r\n                                        \"end\": \"{{Currentdateplus1}}\"\r\n                                    }\r\n                                ]\r\n                            },\r\n                            \"guestCounts\": {\r\n                                \"adults\": \"1\",\r\n                                \"children\": \"0\"\r\n                            },\r\n                            \"roomType\": \"{{RoomType}}\",\r\n                            \"ratePlanCode\": \"{{RatePlanCode}}\",\r\n                            \"start\": \"{{Currentdate}}\",\r\n                            \"end\": \"{{Currentdateplus1}}\",\r\n                            \"marketCode\": \"{{MarketCode}}\",\r\n                            \"sourceCode\": \"{{SourceCode}}\",\r\n                            \"numberOfUnits\": \"1\",\r\n                            \"roomTypeCharged\": \"{{RoomType}}\",\r\n                            \"fixedRate\": true\r\n                        }\r\n                    ],\r\n                    \"guestCounts\": {\r\n                        \"adults\": \"1\",\r\n                        \"children\": \"0\"\r\n                    },\r\n                    \"arrivalDate\": \"{{Currentdate}}\",\r\n                    \"departureDate\": \"{{Currentdateplus1}}\",\r\n                    \"guarantee\": {\r\n                        \"onHold\": false,\r\n                        \"guaranteeCode\": \"{{GuaranteeCode}}\"\r\n                    },\r\n                    \"bookingMedium\": \"{{BookingMedium}}\"\r\n                },\r\n                \"reservationGuests\": [\r\n                    {\r\n                        \"profileInfo\": {\r\n                            \"profileIdList\": {\r\n                                \"id\": \"{{ProfileId}}\",\r\n                                \"type\": \"Profile\"\r\n                            }\r\n                        }\r\n                    }\r\n                ],\r\n                \"reservationProfiles\": {\r\n                    \"reservationProfile\": [\r\n                        {\r\n                            \"profileIdList\": [\r\n                                {\r\n                                    \"id\": \"{{CompanyId}}\",\r\n                                    \"type\": \"Profile\"\r\n                                }\r\n                            ],\r\n                            \"profile\": {\r\n                                \"company\": {\r\n                                    \"companyName\": \"{{CompanyName}}\"\r\n                                }\r\n                            },\r\n                            \"reservationProfileType\": \"Company\"\r\n                        },\r\n                        {\r\n                            \"profileIdList\": [\r\n                                {\r\n                                    \"id\": \"{{TravelAgentProfileId}}\",\r\n                                    \"type\": \"Profile\"\r\n                                }\r\n                            ],\r\n                            \"profile\": {\r\n                                \"company\": {\r\n                                    \"companyName\": \"{{TravelAgentName}}\"\r\n                                }\r\n                            },\r\n                            \"reservationProfileType\": \"TravelAgent\"\r\n                        }\r\n                    ],\r\n                    \"commissionPayoutTo\": \"TravelAgent\"\r\n                },\r\n                \"reservationPaymentMethods\": [\r\n                    {\r\n                        \"paymentMethod\": \"{{PaymentMethod}}\",\r\n                        \"folioView\": \"1\"\r\n                    }\r\n                ],\r\n                \"hotelId\": \"{{HotelId}}\",\r\n                \"reservationStatus\": \"Reserved\"\r\n            }\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								""
							]
						},
						"description": "Create Reservation which is multi leg (multi segment) reservation. Multi-Leg Reservation refers to a single guest reservation that includes multiple consecutive stays (or \"legs\") at the same or different properties. Each \"leg\" represents a segment of the reservation with different arrival and departure dates, possibly with different room types, rates, or even hotel properties (if managing multiple hotels in the same system). This API is to show you how to create Multileg and will not be further used in this collection and therefore do not require any environment variables.\n\nAfter successful post, Postman will automatically populate environment variable ReservationId2  \nVerify the data with getReservations, making use of the confirmationNumberList query parameter which shows you can fetch all leg Reservations with one API. You should get 2 Reservations in the response under reservationInfo"
					},
					"response": []
				},
				{
					"name": "09a. Booking - getReservations by confirmation number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations?limit=100&offset=0&confirmationNumberList={{ConfirmationId}}&excludePseudoRoomReservations=true&fetchInstructions=Reservation&fetchInstructions=MasterInfo",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations"
							],
							"query": [
								{
									"key": "limit",
									"value": "100"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "confirmationNumberList",
									"value": "{{ConfirmationId}}"
								},
								{
									"key": "excludePseudoRoomReservations",
									"value": "true"
								},
								{
									"key": "fetchInstructions",
									"value": "Reservation"
								},
								{
									"key": "fetchInstructions",
									"value": "MasterInfo"
								}
							]
						},
						"description": "Verify the data with getReservations, making use of the confirmationNumberList query parameter which shows you can fetch all leg Reservations with one API. You should get 2 Reservations in the response under reservationInfo"
					},
					"response": []
				},
				{
					"name": "10.Pre-Arrival getPreference",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/crm/config/v1/hotels/{{HotelId}}/preferences?preferenceGroupsCodes=ROOM FEATURES",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"crm",
								"config",
								"v1",
								"hotels",
								"{{HotelId}}",
								"preferences"
							],
							"query": [
								{
									"key": "preferenceGroupsCodes",
									"value": "ROOM FEATURES"
								}
							]
						},
						"description": "Fetch Preference. To insert the preference, you will need to fetch all preferences which can be attached on the reservation. For testing purposes, use the preference group ROOM FEATURES. Choose one of the preferences in the response to set as the environment variable PreferenceCode. Note: The preference code must be configured on the room type chosen - see Adding Room Types item aa."
					},
					"response": []
				},
				{
					"name": "10a. Pre Arrival - Modify Reservation Add Preference",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservations\": [\r\n        {\r\n            \"reservationIdList\": [\r\n                {\r\n                    \"type\": \"Reservation\",\r\n                    \"id\": \"{{ReservationId}}\"\r\n                }\r\n            ],\r\n            \"preferenceCollection\": [\r\n                {\r\n                    \"preference\": [\r\n                        {\r\n                            \"preferenceValue\": \"{{PreferenceCode}}\",\r\n                            \"hotels\": \"{{HotelId}}\",\r\n                            \"global\": false\r\n                        }\r\n                    ],\r\n                    \"preferenceType\": \"ROOM FEATURES\"\r\n                }\r\n            ],\r\n            \"hotelId\": \"{{HotelId}}\",\r\n            \"customReference\": \"\",\r\n            \"preRegistered\": false,\r\n            \"allowMobileCheckout\": false\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}"
							]
						},
						"description": "Modify Reservation to insert the Preference Code from step 10"
					},
					"response": []
				},
				{
					"name": "10b.Pre-Arrival getReservation check Preference",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}?fetchInstructions=Preferences",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}"
							],
							"query": [
								{
									"key": "fetchInstructions",
									"value": "Preferences"
								}
							]
						},
						"description": "Fetch Reservation. Once putReservation is executed, check whether your preference has been attached on the reservation"
					},
					"response": []
				},
				{
					"name": "11. Pre-Arrival getRoutingCodes",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/config/v1/routingInstructions?hotelId={{HotelId}}",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"config",
								"v1",
								"routingInstructions"
							],
							"query": [
								{
									"key": "hotelId",
									"value": "{{HotelId}}"
								}
							]
						},
						"description": "Fetch the routing Codes with getRoutingCodes and set Environment Variable of CompanyRoutingCode"
					},
					"response": []
				},
				{
					"name": "11a.Pre Arrival - Create Routing Instruction to Company on Window 2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"criteria\": {\n        \"hotelId\": \"{{HotelId}}\",\n        \"reservationId\": {\n            \"type\": \"Reservation\",\n            \"id\": \"{{ReservationId}}\"\n        },\n        \"refreshFolio\": true,\n        \"retrievePostingsForRoomRouting\": false,\n        \"folio\": {\n            \"guestInfo\": {\n                \"profileIdList\": []\n            },\n            \"payeeInfo\": {\n                \"payeeId\": {\n                    \"type\": \"Profile\",\n                    \"id\": \"{{CompanyId}}\"\n                },\n                \"payeeAddress\": {\n                    \"address\": {\n                        \"addressLine\": [\n                            null\n                        ]\n                    }\n                }\n            },\n            \"aRNumber\": \"{{CompanyAccountNo}}\",\n            \"instructions\": [\n                {\n                    \"duration\": {\n                        \"daily\": false,\n                        \"sunday\": true,\n                        \"monday\": true,\n                        \"tuesday\": true,\n                        \"wednesday\": true,\n                        \"thursday\": true,\n                        \"friday\": true,\n                        \"saturday\": true\n                    },\n                    \"billingInstructions\": [\n                        {\n                            \"billingCode\": \"{{CompanyRoutingCode}}\"\n                        }\n                    ],\n                    \"limitUsed\": \"0\"\n                }\n            ],\n            \"folioWindowNo\": \"2\"\n \n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/routingInstructions/create",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"routingInstructions",
								"create"
							]
						},
						"description": "A routing instruction is a set of rules applied to a reservation that tells Opera where and how to route charges. A routing code is a predefined template that contains a routing instruction. It simplifies and standardizes routing for frequent use.\n\nPosting a routing instruction to existing reservation where Food charges goes to the Company which is linked to the reservation. Determine which routing code you will use for your environment then ensure it is directed to window 2. You can pick any of your choice except ALL. For testing purposes use one of the Food respective codes.\n\nFetch the routing Codes with getRoutingCodes and set Environment Variable of CompanyRoutingCode  \nCreate Routing Instructions"
					},
					"response": []
				},
				{
					"name": "11b.Pre-Arrival getReservation Routing",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}?fetchInstructions=RoutingInstructions",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}"
							],
							"query": [
								{
									"key": "fetchInstructions",
									"value": "RoutingInstructions"
								}
							]
						},
						"description": "This API is to fetch the Routing Instructions which you created with previous step"
					},
					"response": []
				},
				{
					"name": "12. Pre-Arrival getPaymentMethod",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/lov/v1/listOfValues/hotels/{{HotelId}}/paymentMethods?includeInactiveFlag=false",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"lov",
								"v1",
								"listOfValues",
								"hotels",
								"{{HotelId}}",
								"paymentMethods"
							],
							"query": [
								{
									"key": "includeInactiveFlag",
									"value": "false"
								}
							]
						},
						"description": "To find the Payment Method use getPaymentMethod API. Use whichever code is configured in your environment for City Ledger or Direct Billing. Within the response payload, the relevent code should have DirectBillYN=Y. Set this code to be the CompanyPaymentMethod environment variable."
					},
					"response": []
				},
				{
					"name": "12a. Pre Arrival - Modify Reservation to update Payment Method on Window 2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reservations\": [\n    {\n      \"reservationIdList\": [\n        {\n          \"type\": \"Reservation\",\n          \"id\": \"{{ReservationId}}\"\n        }\n      ],\n      \"reservationPaymentMethods\": [\n        {\n          \"paymentMethod\": \"{{CompanyPaymentMethod}}\",\n          \"folioView\": \"2\"\n        }\n      ],\n      \"hotelId\": \"{{HotelId}}\",\n      \"preRegistered\": false,\n      \"allowMobileCheckout\": false\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}"
							]
						},
						"description": "Modify Payment Method on Reservation. Once Routing is done, modification is required to the existing Reservation to inform that window 2 will be paid by Direct Billing as the Payment Method. Kindly note Routing Instructions and Payment Method are 2 different APIs at present."
					},
					"response": []
				},
				{
					"name": "12b.Pre-Arrival getReservation Payment",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}?fetchInstructions=ReservationPaymentMethods",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}"
							],
							"query": [
								{
									"key": "fetchInstructions",
									"value": "ReservationPaymentMethods"
								}
							]
						},
						"description": "Use fetch Reservation to check whether the modification of the Payment Method was successful on Window 2"
					},
					"response": []
				},
				{
					"name": "13. Pre-Arrival getRoutingCodes",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/config/v1/routingInstructions?hotelId={{HotelId}}",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"config",
								"v1",
								"routingInstructions"
							],
							"query": [
								{
									"key": "hotelId",
									"value": "{{HotelId}}"
								}
							]
						},
						"description": "Fetch the routing Codes with getRoutingCodes API and set the value corresponding to the routing code for City Ledger or Direct Billing in your environment in the Environment Variable TravelAgentRoutingCode"
					},
					"response": []
				},
				{
					"name": "13a. Pre Arrival - Create Routing Instruction to Travel Agent on Window 3",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"criteria\": {\n        \"hotelId\": \"{{HotelId}}\",\n        \"reservationId\": {\n            \"type\": \"Reservation\",\n            \"id\": \"{{ReservationId}}\"\n        },\n        \"refreshFolio\": true,\n        \"retrievePostingsForRoomRouting\": false,\n        \"folio\": {\n            \"guestInfo\": {\n                \"profileIdList\": []\n            },\n            \"payeeInfo\": {\n                \"payeeId\": {\n                    \"type\": \"Profile\",\n                    \"id\": \"{{TravelAgentProfileId}}\"\n                },\n                \"payeeAddress\": {\n                    \"address\": {\n                        \"addressLine\": [\n                            null\n                        ]\n                    }\n                }\n            },\n            \"instructions\": [\n                {\n                    \"duration\": {\n                        \"daily\": false,\n                        \"sunday\": true,\n                        \"monday\": true,\n                        \"tuesday\": true,\n                        \"wednesday\": true,\n                        \"thursday\": true,\n                        \"friday\": true,\n                        \"saturday\": true\n                    },\n                    \"billingInstructions\": [\n                        {\n                            \"billingCode\": \"{{TravelAgentRoutingCode}}\"\n                        }\n                    ],\n                    \"limitUsed\": \"0\"\n                }\n            ],\n            \"folioWindowNo\": \"3\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/routingInstructions/create",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"routingInstructions",
								"create"
							]
						},
						"description": "A routing instruction is a set of rules applied to a reservation that tells Opera where and how to route charges. A routing code is a predefined template that contains a routing instruction. It simplifies and standardizes routing for frequent use.\n\nPosting a routing instruction to an existing reservation where Room charges go to the Travel Agent linked to the reservation. Make sure the routing is done to window 3. Set whichever code respective to Room Charges in environment variable for City Ledger or Direct Billing and direct it to window 3.\n\nFetch the routing Codes with getRoutingCodes API and set the value corresponding to the routing code for City Ledger or Direct Billing in your environment in the Environment Variable TravelAgentRoutingCode  \nCreate Routing Instructions on Reservation  \nCheck whether Routing Instructions was successful on Window 3"
					},
					"response": []
				},
				{
					"name": "13b.Pre-Arrival getReservation Routing",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}?fetchInstructions=RoutingInstructions",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}"
							],
							"query": [
								{
									"key": "fetchInstructions",
									"value": "RoutingInstructions"
								}
							]
						},
						"description": "Check whether Routing Instructions was successful on Window 3"
					},
					"response": []
				},
				{
					"name": "14. Pre-Arrival getPaymentMethod",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/lov/v1/listOfValues/hotels/{{HotelId}}/paymentMethods?includeInactiveFlag=false",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"lov",
								"v1",
								"listOfValues",
								"hotels",
								"{{HotelId}}",
								"paymentMethods"
							],
							"query": [
								{
									"key": "includeInactiveFlag",
									"value": "false"
								}
							]
						},
						"description": "To find the Payment Method use getPaymentMethod API. Use whichever code is configured in your environment for City Ledger or Direct Billing. Within the response payload, the relevent code should have DirectBillYN=Y. Set this to be the TravelAgentPaymentMethod environment variable."
					},
					"response": []
				},
				{
					"name": "14a. Pre Arrival - Modify Reservation to update Payment Method on Window 3 Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reservations\": [\n        {\n            \"reservationIdList\": [\n                {\n                    \"type\": \"Reservation\",\n                    \"id\": \"{{ReservationId}}\"\n                }\n            ],\n            \"reservationPaymentMethods\": [\n                {\n                    \"paymentMethod\": \"{{TravelAgentPaymentMethod}}\",\n                    \"folioView\": \"3\"\n                }\n            ],\n            \"hotelId\": \"{{HotelId}}\",\n            \"preRegistered\": false,\n            \"allowMobileCheckout\": false\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}"
							]
						},
						"description": "Modify Payment Method on Reservation. Once Routing is done, modification is required to the existing Reservation to inform that window 3 will be paid by Direct Billing as the Payment Method. Kindly note Routing Instructions and Payment Method are 2 different APIs at present."
					},
					"response": []
				},
				{
					"name": "14b.Pre-Arrival getReservation Payment",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}?fetchInstructions=ReservationPaymentMethods",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}"
							],
							"query": [
								{
									"key": "fetchInstructions",
									"value": "ReservationPaymentMethods"
								}
							]
						},
						"description": "Use fetch Reservation to check whether the modification of the Payment Method was successful on Window 3"
					},
					"response": []
				},
				{
					"name": "15. Check OPI Cloud Active",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/ent/config/v1/settings?hotelId={{HotelId}}&parameterNameWildCard=OPI Cloud Credit Card Processing",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"ent",
								"config",
								"v1",
								"settings"
							],
							"query": [
								{
									"key": "hotelId",
									"value": "{{HotelId}}"
								},
								{
									"key": "parameterNameWildCard",
									"value": "OPI Cloud Credit Card Processing"
								}
							]
						},
						"description": "With this API, you can verify whether OPI cloud is active. Note that if you do not have OPI cloud active please skip to step 16a but note that this configuration will not be supported in the future."
					},
					"response": []
				},
				{
					"name": "15a. Pre Arrival - Convert Pan into token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\n    \"expiryDate\": \"2612\",\n    \"pan\": \"4012888888881881\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/tokenExchange/v1/hotels/{{HotelId}}/tokens",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"tokenExchange",
								"v1",
								"hotels",
								"{{HotelId}}",
								"tokens"
							]
						},
						"description": "Convert Primary Account Number (PAN) into Token issued by Payment Service Providers. This is required to updated Window 1 payment method to the payment method which belongs to guest. Take any test Credit Card numbers and insert into the payload within the tag pan.  \nKindly note that this environment is linked to a PSP simulator and therefore every PAN number conversion will respond with different Token numbers for same PAN number."
					},
					"response": []
				},
				{
					"name": "16a. Pre Arrival - Modify Reservation to Insert Credit Card Token as Payment Method on Window 1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reservationId\": {\n        \"type\": \"Reservation\",\n        \"id\": \"{{ReservationId}}\"\n    },\n    \"reservationPaymentMethods\": [\n        {\n            \"paymentCard\": {\n                \"cardType\": \"Va\",\n                \"cardNumber\": \"4012188119853892\",\n                \"cardNumberMasked\": \"XXXXXXXXXXXX1881\",\n                \"expirationDate\": \"2026-12-31\",\n                \"expirationDateExpired\": false,\n                \"cardHolderName\": \"Charlie\",\n                \"cardOrToken\": \"Token\",\n                \"citId\": \"654321ABC1234581\"\n            },\n            \"emailFolioInfo\": {\n                \"email\": {\n                    \"emailAddress\": \"{{EmailAddress}}\"\n                },\n                \"emailFolio\": true\n            },\n            \"authorizationRule\": {\n                \"code\": \"2\",\n                \"amount\": {\n                    \"amount\": \"50\",\n                    \"currencyCode\": \"{{CurrencyCode}}\"\n                }\n            },\n            \"paymentMethod\": \"VA\",\n            \"folioView\": 1\n        }\n    ],\n    \"hotelId\": \"{{HotelId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/paymentMethods",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"paymentMethods"
							]
						},
						"description": "_Note_ Use this only if OPI is active (see step 15).\n\nUpdate an existing Payment Method using this API. Make sure you update the request body:\n\n1. Set `cardNumber` to be the value in the `token` property you received from the response body to `openPaymentTokenExchange`\n    \n2. Set `cardNumberMasked` to be the value from the `pan` property you received from the response body to `openPaymentTokenExchange`\n    \n3. Set `expirationDate` to be some time in the future\n    \n\nAnd any other value which you changed."
					},
					"response": []
				},
				{
					"name": "16b. Pre Arrival - Modify Reservation to Insert Credit Card Number as Payment Method on Window 1 with OPI inactive",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reservationId\": {\n        \"type\": \"Reservation\",\n        \"id\": \"{{ReservationId}}\"\n    },\n    \"reservationPaymentMethods\": [\n        {\n            \"paymentCard\": {\n                \"cardType\": \"Va\",\n                \"cardNumber\": \"4111111111111111\",\n                \"expirationDate\": \"2025-03-31\",\n                \"expirationDateExpired\": false,\n                \"cardHolderName\": \"Charlie\",\n                \"processing\": \"Manual\",\n                \"swiped\": false,\n                \"cardOrToken\": \"CardNumber\"\n            },\n            \"emailFolioInfo\": {\n                \"email\": {\n                    \"emailAddress\": \"{{EmailAddress}}\"\n                },\n                \"emailFolio\": true\n            },\n            \"authorizationRule\": {\n                \"code\": \"2\",\n                \"amount\": {\n                    \"amount\": \"50\",\n                    \"currencyCode\": \"{{CurrencyCode}\"\n                }\n            },\n            \"paymentMethod\": \"VA\",\n            \"folioView\": 1\n        }\n    ],\n    \"hotelId\": \"{{HotelId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/paymentMethods",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"paymentMethods"
							]
						},
						"description": "_Note_ Use this only if OPI is not active (see step 15). This configuration will not be supported in the future.\n\nUpdate an existing Payment Method using this API. Make sure you update the request body:\n\n1. Set `cardNumber` to be the plaintext card number\n    \n2. Set `expirationDate` to be some time in the future\n    \n\nAnd any other value which you changed."
					},
					"response": []
				},
				{
					"name": "17. Verify Interface active",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "logLevel",
								"value": "ALL",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/int/config/v1/hotelInterfaceTypes?includeInactive=false&hotelIds={{HotelId}}&interfaceTypes=EFT",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"int",
								"config",
								"v1",
								"hotelInterfaceTypes"
							],
							"query": [
								{
									"key": "transactionType",
									"value": "Additional",
									"description": "Additional, ArPayment, Batch, BatchDeposit, BatchDepositRefund, Billing, CheckIn, CheckInManualAuth, Deposit, EndOfDay, EndOfDayDeposit, Manual, Other, PasserBy, PostIt, PreCheckIn, Refund, Schedule",
									"disabled": true
								},
								{
									"key": "transactionType",
									"value": "CheckIn",
									"disabled": true
								},
								{
									"key": "includeInactive",
									"value": "false"
								},
								{
									"key": "hotelIds",
									"value": "{{HotelId}}"
								},
								{
									"key": "interfaceTypes",
									"value": "EFT"
								}
							]
						},
						"description": "This API is useful for many Kiosk Partners who want to save time to Pre Authorize the card prior to calling the Checkin API.\n\n1. getHotelInterface API will show whether OPI is installed and configured. Look for `activeFlag=true`. Also set environment variable `logo` into `Logo`which is terminal Id"
					},
					"response": []
				},
				{
					"name": "17a. Pre Arrival - Pre Authorise Credit Card",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "logLevel",
								"value": "ALL",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"criteria\": {\n        \"amount\": {\n            \"amount\": \"250\",\n            \"currencyCode\": \"USD\"\n        },\n        \"payment\": {\n            \"paymentCard\": {\n                \"cardType\": \"Va\",\n                \"cardHolderName\": \"Charlie\"\n            },\n            \"paymentMethod\": \"VA\",\n            \"folioView\": \"1\"\n        },\n        \"terminalId\": \"{{Logo}}\",\n        \"incidentalAmount\": {\n            \"amount\": \"0\",\n            \"currencyCode\": \"USD\"\n        },\n        \"evaluateApprovalAmount\": false,\n        \"sourceOfAuthorization\": \"PreCheckIn\",\n        \"updateReservation\": true\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/paymentMethods/creditCard/authorize",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"paymentMethods",
								"creditCard",
								"authorize"
							]
						},
						"description": "Pre Authorize card.After execution, make sure the following values are set into Environment variables:  \ncardId  \napprovalCode"
					},
					"response": []
				},
				{
					"name": "17b. Check PreAuth",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "logLevel",
								"value": "ALL",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/authorizationHistory?includeAuthorizations=true&type=Reservation&idContext=OPERA&includePayments=false&includeRefunds=false&includeFailures=false&folioView=1",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"authorizationHistory"
							],
							"query": [
								{
									"key": "includeAuthorizations",
									"value": "true"
								},
								{
									"key": "type",
									"value": "Reservation"
								},
								{
									"key": "idContext",
									"value": "OPERA"
								},
								{
									"key": "includePayments",
									"value": "false"
								},
								{
									"key": "includeRefunds",
									"value": "false"
								},
								{
									"key": "includeFailures",
									"value": "false"
								},
								{
									"key": "folioView",
									"value": "1"
								},
								{
									"key": "transactionType",
									"value": "Additional",
									"description": "Additional, ArPayment, Batch, BatchDeposit, BatchDepositRefund, Billing, CheckIn, CheckInManualAuth, Deposit, EndOfDay, EndOfDayDeposit, Manual, Other, PasserBy, PostIt, PreCheckIn, Refund, Schedule",
									"disabled": true
								},
								{
									"key": "transactionType",
									"value": "CheckIn",
									"disabled": true
								}
							]
						},
						"description": "Check whether PreAuthorization was successful with the fetchAuthorizationHistory API"
					},
					"response": []
				},
				{
					"name": "18. Pre Arrival- Fetch Available Hotel Rooms",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/v1/hotels/{{HotelId}}/rooms?hotelRoomStartDate={{Currentdate}}&hotelRoomEndDate={{Currentdateplus1}}&hotelRoomStatus=Inspected&hotelRoomFrontOfficeStatus=Vacant&roomType={{RoomType}}&offset=0&limit=20",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"v1",
								"hotels",
								"{{HotelId}}",
								"rooms"
							],
							"query": [
								{
									"key": "hotelRoomStartDate",
									"value": "{{Currentdate}}"
								},
								{
									"key": "hotelRoomEndDate",
									"value": "{{Currentdateplus1}}"
								},
								{
									"key": "roomFeatureCode",
									"value": "{{PreferenceCode}}",
									"disabled": true
								},
								{
									"key": "hotelRoomStatus",
									"value": "Inspected"
								},
								{
									"key": "hotelRoomFrontOfficeStatus",
									"value": "Vacant"
								},
								{
									"key": "roomType",
									"value": "{{RoomType}}"
								},
								{
									"key": "offset",
									"value": "0"
								},
								{
									"key": "limit",
									"value": "20"
								}
							]
						},
						"description": "Ensure there are enough Inspected & Vacant rooms. If not they can be made inspected within OPERA Cloud UI in Inventory > Room Management > Housekeeping Board\n\nWith the API find vacant and inspected rooms so that you can assign one to the reservation.\n\nMake sure you set the `RoomNumber` into the environment variable."
					},
					"response": []
				},
				{
					"name": "19.Pre Arrival - Assign Inspected Vacant Rooms to Reservation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"criteria\": {\r\n        \"hotelId\": \"{{HotelId}}\",\r\n        \"reservationIdList\": [\r\n            {\r\n                \"id\": \"{{ReservationId}}\",\r\n                \"type\": \"Reservation\"\r\n            }\r\n        ],\r\n        \"roomId\": \"{{RoomNumber}}\",\r\n        \"overrideInstructions\": {\r\n            \"dirtyRoom\": true\r\n        },\r\n        \"updateRoomTypeCharged\": true,\r\n        \"includeDepartureRooms\": true,\r\n        \"roomNumberLocked\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/roomAssignments",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"roomAssignments"
							]
						},
						"description": "Assign the room which you got from the earlier API call."
					},
					"response": []
				},
				{
					"name": "20.Pre Arrival- Modify Reservation to insert Pre-Registeration",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservation\": {\r\n        \"reservationId\": {\r\n            \"type\": \"Reservation\"\r\n        },\r\n        \"preCheckInDetails\": {\r\n            \"arrival\": {\r\n                \"arrivalTime\": \"{{Currentdate}}T17:00:00\"\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/preCheckIn",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"preCheckIn"
							]
						},
						"description": "Pre-Register Or Pre-Checkin\n\nYou can offer your guests the ability to check in for their reservations by pre-registering. When a reservation is pre-registered, all of the guest's information to finish the registration process is collected, including authorizing the guest's credit card for the reservation. This makes it easy to check in the reservation when the guests arrive and the assigned room is available.\n\nYou can search for and manage pre-registered arrival reservations from Arrivals search by selecting the Pre-registered check box in advanced search.\n\n1. Pre Register the guest. Ensure the `arrivalTime` is updated in the payload"
					},
					"response": []
				},
				{
					"name": "20a.Pre Arrival- Modify Reservation to insert Advance Checkin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"reservation\": {\r\n    \"eTRComments\": \"Guest going out for Dinner. Please email when room is ready\",\r\n    \"expectedReturnTime\": \"{{Currentdate}}T19:15:00\",\r\n    \"hotelId\": \"{{HotelId}}\",\r\n    \"optedForCommunication\": true,\r\n    \"reservationCommunication\": {\r\n      \"emails\": {\r\n        \"emailInfo\": [\r\n          {\r\n            \"email\": {\r\n              \"emailAddress\": \"{{EmailAddress}}\",\r\n              \"orderSequence\": 1,\r\n              \"primaryInd\": true,\r\n              \"type\": \"EMAIL\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    \"reservationId\": {\r\n      \"id\": \"{{ReservationId}}\",\r\n      \"type\": \"Reservation\"\r\n    }\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/advanceCheckIns",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"advanceCheckIns"
							]
						},
						"description": "Additional functionality - `Advanced Checkin` At times, when guests arrive to the property prior to a room being ready, you can flag a reservation as Advance Checked In for arrivals due in on the current business date. This enables guests to post charges to their reservation folio prior to check in, and helps the rooms management team prioritize room cleaning and assignment. Individual reservations (including Walk In reservations, Pre Registered reservations, and reservations that are in Queue) and group block reservations can be Advance Checked In."
					},
					"response": []
				},
				{
					"name": "21. Checkin the reservation",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"reservation\": {\r\n        \"ignoreWarnings\": false,\r\n        \"stopCheckin\": false,\r\n        \"printRegistration\": false\r\n    },\r\n    \"fetchReservationInstruction\": [\r\n        \"ReservationDetail\"\r\n    ],\r\n    \"includeNotifications\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/checkIns",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"checkIns"
							],
							"query": [
								{
									"key": "fetchInstructions",
									"value": "Reservation",
									"disabled": true
								},
								{
									"key": null,
									"value": "26098972",
									"disabled": true
								}
							]
						},
						"description": "Checkin the guest using this API."
					},
					"response": []
				},
				{
					"name": "22. Checkin- Create Room Key",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelId",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reservationIdList\": [\n        {\n            \"type\": \"Reservation\",\n            \"id\": \"{{ReservationId}}\"\n        }\n    ],\n    \"keyOptions\": \"GAR,POOL\",\n    \"keyValidityStart\": \"2023-12-24 12:00:00.0\",\n    \"noOfKeys\": \"1\",\n    \"encoderTerminal\": \"IFC8DLSNEW\",\n    \"encoderId\": {\n        \"id\": \"0\"\n    },\n    \"resort\": \"{{HotelId}}\",\n    \"keyType\": \"New\",\n    \"keyValidityEnd\": \"2025-02-25 22:00:00.0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/roomKeys",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"roomKeys"
							]
						},
						"description": "This is for illustration purposes, because it relies upon a key card vendor being integrated into your environment.\n\n1. Creating a Key. KeyType by default should be `New`"
					},
					"response": []
				},
				{
					"name": "23. Stay - getServiceRequest",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/rsv/config/v1/hotels/{{HotelId}}/serviceRequestCodes?limit=20",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"rsv",
								"config",
								"v1",
								"hotels",
								"{{HotelId}}",
								"serviceRequestCodes"
							],
							"query": [
								{
									"key": "limit",
									"value": "20"
								}
							]
						},
						"description": "Fetch Service request codes. Choose one of the service request codes in the response and update the environment variables ServiceRequestCodes and DeptCode with the values from this service request code."
					},
					"response": []
				},
				{
					"name": "23a. Stay- Create a Service Request",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"serviceRequestsDetails\": [\r\n        {\r\n            \"hotelId\": \"{{HotelId}}\",\r\n            \"code\": \"{{ServiceRequestCodes}}\",\r\n            \"status\": \"Open\",\r\n            \"priority\": \"ASAP\",\r\n            \"department\": {\r\n                \"code\": \"{{DeptCode}}\"\r\n            },\r\n            \"reservationIdList\": [\r\n                {\r\n                    \"type\": \"Reservation\",\r\n                    \"id\": \"{{ReservationId}}\"\r\n                }\r\n            ],\r\n            \"room\": \"{{RoomNumber}}\",\r\n            \"openDate\": \"2024-05-15 16:00:00.0\",\r\n            \"comment\": \"3 Fresh Towels Please\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/v1/hotels/{{HotelId}}/serviceRequests",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"v1",
								"hotels",
								"{{HotelId}}",
								"serviceRequests"
							]
						},
						"description": "Create a Service request to provide towel by Housekeeping department. Ensure you change the tag openDate within the payload"
					},
					"response": []
				},
				{
					"name": "23b. Stay - getServiceRequest on Reservation",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/v1/hotels/{{HotelId}}/serviceRequests?reservationid={{ReservationId}}&status=Open&reservationIdContext=OPERA",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"v1",
								"hotels",
								"{{HotelId}}",
								"serviceRequests"
							],
							"query": [
								{
									"key": "reservationid",
									"value": "{{ReservationId}}"
								},
								{
									"key": "status",
									"value": "Open",
									"description": "\"Closed\" \"DoNotDisturb\" \"MakeUpRoom\" \"Open\" \"PendingFollowUp\""
								},
								{
									"key": "reservationIdContext",
									"value": "OPERA"
								},
								{
									"key": "hotelIds",
									"value": "{{HotelId}}",
									"disabled": true
								}
							]
						},
						"description": "Fetch the Service Request Codes applied to the reservation to see whether it was successfully inserted. Note that due to a known bug this returns all service requests. Look through the response body to check that the service request created in step 1 exists in the response."
					},
					"response": []
				},
				{
					"name": "24. Stay - check Wakeup function active",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/ent/config/v1/settings?hotelId={{HotelId}}&parameterNameWildCard=Wake Up Calls",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"ent",
								"config",
								"v1",
								"settings"
							],
							"query": [
								{
									"key": "hotelId",
									"value": "{{HotelId}}"
								},
								{
									"key": "parameterNameWildCard",
									"value": "Wake Up Calls"
								}
							]
						},
						"description": "Create a Wakeup call on the reservation. Ensure you change the dates within the payload\n\nCheck whether Wakeup call Opera Control is active\n"
					},
					"response": []
				},
				{
					"name": "24a. Stay - Set Wakeup call",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"calls\": [\n        {\n            \"reservationInfo\": {\n                \"reservationIdList\": [\n                    {\n                        \"type\": \"Reservation\",\n                        \"id\": \"{{ReservationId}}\"\n                    }\n                ],\n                \"hotelId\": \"{{HotelId}}\",\n                \"room\": \"{{RoomNumber}}\"\n            },\n            \"callTime\": \"{{Currentdateplus1}} 07:30:00\",\n            \"isFollowUpCall\": false,\n            \"status\": \"Pending\",\n            \"timeSpan\": {\n                \"startDate\": \"{{Currentdateplus1}}\"\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/wakeUpCalls",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"wakeUpCalls"
							]
						},
						"description": "Create a Wakeup call on the reservation."
					},
					"response": []
				},
				{
					"name": "24b. Stay - getWakeup",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/wakeUpCalls?fetchCancelled=true&fetchCompleted=true&fetchPending=true&fetchNoAnswer=true&reservationIdContext=OPERA&reservationIdType=Reservation",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"wakeUpCalls"
							],
							"query": [
								{
									"key": "fetchCancelled",
									"value": "true"
								},
								{
									"key": "fetchCompleted",
									"value": "true"
								},
								{
									"key": "fetchPending",
									"value": "true"
								},
								{
									"key": "fetchNoAnswer",
									"value": "true"
								},
								{
									"key": "reservationIdContext",
									"value": "OPERA"
								},
								{
									"key": "reservationIdType",
									"value": "Reservation"
								}
							]
						},
						"description": "getWakeUpcall. Use this API to check whether the postWakeUpcall was inserted successfully into the reservation"
					},
					"response": []
				},
				{
					"name": "25. Stay findNextCashierNumber",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/config/v1/cashiers/nextAvailable",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"config",
								"v1",
								"cashiers",
								"nextAvailable"
							]
						},
						"description": "This API is required for postBillingCharges in which the cashier id is mandatory.\n\nFetch the next available cashier number id and insert into CashierId environment variable"
					},
					"response": []
				},
				{
					"name": "25a. Stay - Create Cashier",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"cashiers\": [\r\n    {\r\n      \"usageInfo\": {\r\n        \"maximumDailyUses\": 9999\r\n      },\r\n      \"inactive\": false,\r\n      \"name\": \"Cashier for Kiosk\",\r\n      \"floatOverShort\": true,\r\n      \"cashierId\": {{CashierId}},\r\n      \"attachedUser\": \"\",\r\n      \"startingAmount\": 1000,\r\n      \"kiosk\": false,\r\n      \"currencyCode\": \"{{CurrencyCode}}\",\r\n      \"cashierType\": \"InterfaceCashier\",\r\n      \"open\": false\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/config/v1/cashiers",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"config",
								"v1",
								"cashiers"
							]
						},
						"description": "Create Cashier"
					},
					"response": []
				},
				{
					"name": "25b. Stay getCashiers",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/config/v1/cashierDetails/cashiers?cashierIDs={{CashierId}}&includeInactive=false",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"config",
								"v1",
								"cashierDetails",
								"cashiers"
							],
							"query": [
								{
									"key": "offset",
									"value": "25",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "20",
									"disabled": true
								},
								{
									"key": "cashierIDs",
									"value": "{{CashierId}}"
								},
								{
									"key": "includeInactive",
									"value": "false"
								},
								{
									"key": "name",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "Use this API to check whether postCashier API has successfully inserted cashier id.  \nIn production, ensure you ask the customer which cashierId to use and consistently use that cashierId for that environment."
					},
					"response": []
				},
				{
					"name": "26.Stay getTransactionCode window1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/config/v1/transactionCodes?hotelIds={{HotelId}}&includeInactive=false",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"config",
								"v1",
								"transactionCodes"
							],
							"query": [
								{
									"key": "hotelIds",
									"value": "{{HotelId}}"
								},
								{
									"key": "includeInactive",
									"value": "false"
								}
							]
						},
						"description": "getTransactionCode Use this API to find the required transaction Code. Find telecommunications or similar transaction codes you'll choose to assign to Window 1. Note down the transaction code. Make sure this transaction code is inserted into the environment variable TransactionCode. Kindly note that transactionCodes should be created with the manualPost tag set to true. Only these transaction codes can be used at preset to be able to post through OHIP."
					},
					"response": []
				},
				{
					"name": "26a. Stay - Post Billing Charges on window 1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"criteria\": {\r\n        \"charges\": {\r\n            \"postingQuantity\": 1,\r\n            \"usePackageAllowance\": false,\r\n            \"price\": {\r\n                \"amount\": 12,\r\n                \"currencyCode\": \"USD\"\r\n            },\r\n            \"transactionCode\": {{TransactionCode}},\r\n            \"applyRoutingInstructions\": true,\r\n            \"folioWindowNo\": \"1\"\r\n        },\r\n        \"reservationId\": {\r\n            \"idContext\": \"OPERA\",\r\n            \"id\": {{ReservationId}},\r\n            \"type\": \"Reservation\"\r\n        },\r\n        \"cashierId\": {{CashierId}},\r\n        \"hotelId\": \"{{HotelId}}\",\r\n        \"postIt\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/charges",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"charges"
							]
						},
						"description": "Post charges to the window 1. The amount can be of your choice. Remember in Step 13 we created Routing instructions the Food Charges are routed to window 2. Therefore make sure the transaction code you choose here is not related to Food"
					},
					"response": []
				},
				{
					"name": "26b.Stay getTransactionCode window2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/fof/config/v1/transactionCodes?hotelIds={{HotelId}}&includeInactive=false",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"fof",
								"config",
								"v1",
								"transactionCodes"
							],
							"query": [
								{
									"key": "hotelIds",
									"value": "{{HotelId}}"
								},
								{
									"key": "includeInactive",
									"value": "false"
								},
								{
									"key": "transactionSubgroupsCodes",
									"value": "FOD",
									"disabled": true
								}
							]
						},
						"description": "getTransactionCode Use this API to find the required transaction Code. Find food or similar transaction codes to assign to Window 2. Overwrite the environment variable TransactionCode with this new transaction code. Kindly note that transactionCodes should be created with the manualPost tag set to true. Only these transaction Codes can be used at preset to be able to post through OHIP."
					},
					"response": []
				},
				{
					"name": "26c. Stay - Post Billing Charges on window 2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"criteria\": {\r\n        \"charges\": {\r\n            \"postingQuantity\": 1,\r\n            \"usePackageAllowance\": false,\r\n            \"price\": {\r\n                \"amount\": 50,\r\n                \"currencyCode\": \"USD\"\r\n            },\r\n            \"transactionCode\": {{TransactionCode}},\r\n            \"applyRoutingInstructions\": true,\r\n            \"folioWindowNo\": \"2\"\r\n        },\r\n        \"reservationId\": {\r\n            \"idContext\": \"OPERA\",\r\n            \"id\": {{ReservationId}},\r\n            \"type\": \"Reservation\"\r\n        },\r\n        \"cashierId\": {{CashierId}},\r\n        \"hotelId\": \"{{HotelId}}\",\r\n        \"postIt\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/charges",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"charges"
							]
						},
						"description": "Post charges to the window 2. The amount can be of your choice. Remember in Step 13 we created Routing instructions the Food Charges are routed to window 2. Therefore make sure the transaction code you choose here is related to Food"
					},
					"response": []
				},
				{
					"name": "27. Stay - Create Advance Room Charges",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"criteria\": {\r\n        \"reservationIdList\": [\r\n            {\r\n                \"id\": \"{{ReservationId}}\",\r\n                \"type\": \"Reservation\"\r\n            }\r\n        ],\r\n        \"postForEntireStay\": \"true\",\r\n        \"endDateToCharge\": \"{{Currentdate}}\",\r\n        \"cashierId\": \"{{CashierId}}\",\r\n        \"hotelId\": \"{{HotelId}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/advanceRoomCharges",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"advanceRoomCharges"
							]
						},
						"description": "As we are testing and no End of Day Routine will be run, use this API to post Room Charges in advance which will post room charges to window 3 as per the Routing instructions you inserted earlier."
					},
					"response": []
				},
				{
					"name": "28. Checkout- Fetch Folio postings from each window",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/folios?fetchInstructions=Windowbalances&limit=50",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"folios"
							],
							"query": [
								{
									"key": "folioWindowNo",
									"value": "2",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Account",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Payee",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Windowbalances"
								},
								{
									"key": "fetchInstructions",
									"value": "Payment",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Postings",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Transactioncodes",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Totalbalance",
									"disabled": true
								},
								{
									"key": "fetchInstructions",
									"value": "Reservation",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "50"
								}
							]
						},
						"description": "Use this API to fetch Folios from each window. Remember there are 3 Windows which should have Charges (Balances)"
					},
					"response": []
				},
				{
					"name": "29. Checkout - Post Payment on each Window 1",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"criteria\": {\r\n        \"action\": \"Billing\",\r\n        \"overrideInsufficientCC\": false,\r\n        \"applyCCSurcharge\": false,\r\n        \"vATOffset\": false,\r\n        \"reservationId\": {\r\n            \"idContext\": \"OPERA\",\r\n            \"id\": \"{{ReservationId}}\",\r\n            \"type\": \"Reservation\"\r\n        },\r\n        \"paymentMethod\": {\r\n            \"paymentCard\": {\r\n                \"cardType\": \"Va\",\r\n                \"cardNumberMasked\": \"\",\r\n                \"expirationDate\": \"2029-12-01\",\r\n                \"cardId\": {\r\n                    \"id\": \"{{CardId}}\",\r\n                    \"type\": \"CreditCard\"\r\n                }\r\n            },\r\n            \"paymentMethod\": \"VA\",\r\n            \"folioView\": \"1\"\r\n        },\r\n        \"postingReference\": \"Paid by Guest\",\r\n        \"postingAmount\": {\r\n            \"amount\": \"12.00\",\r\n            \"currencyCode\": \"USD\"\r\n        },\r\n        \"cashierId\": \"{{CashierId}}\",\r\n        \"hotelId\": \"{{HotelId}}\",\r\n        \"folioWindowNo\": \"1\",\r\n        \"overrideARCreditLimit\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/payments",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"payments"
							]
						},
						"description": "Use this API to post payment against the folio on each Window. There should be no balance left. Window 1 should be paid against Credit Card."
					},
					"response": []
				},
				{
					"name": "30. Checkout - Post Payment on each Window 2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"criteria\": {\r\n    \"overrideInsufficientCC\": false,\r\n    \"applyCCSurcharge\": false,\r\n    \"vATOffset\": false,\r\n    \"reservationId\": {\r\n      \"idContext\": \"OPERA\",\r\n      \"id\": {{ReservationId}},\r\n      \"type\": \"Reservation\"\r\n    },\r\n    \"paymentMethod\": {\r\n      \"paymentMethod\": \"{{CompanyPaymentMethod}}\"\r\n    },\r\n    \"postingReference\": \"Paid by Company\",\r\n    \"postingAmount\": {\r\n      \"amount\": \"50\",\r\n      \"currencyCode\": \"USD\"\r\n    },\r\n    \"cashierId\": \"{{CashierId}}\",\r\n    \"hotelId\": \"{{HotelId}}\",\r\n    \"folioWindowNo\": \"2\",\r\n    \"overrideARCreditLimit\": false\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/payments",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"payments"
							]
						},
						"description": "Use this API to post payment against the folio on each Window. There should be no balance left\n\nWindow 2 should be paid against the payment Method determined in step 12a, which is invoiced to Company"
					},
					"response": []
				},
				{
					"name": "31. Checkout - Post Payment on each Window 3",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"criteria\": {\r\n    \"overrideInsufficientCC\": false,\r\n    \"applyCCSurcharge\": false,\r\n    \"vATOffset\": false,\r\n    \"reservationId\": {\r\n      \"idContext\": \"OPERA\",\r\n      \"id\": {{ReservationId}},\r\n      \"type\": \"Reservation\"\r\n    },\r\n    \"paymentMethod\": {\r\n      \"paymentMethod\": \"{{TravelAgentPaymentMethod}}\"\r\n    },\r\n    \"postingReference\": \"Paid by Travel Agent\",\r\n    \"postingAmount\": {\r\n      \"amount\": \"250\",\r\n      \"currencyCode\": \"USD\"\r\n    },\r\n    \"cashierId\": \"{{CashierId}}\",\r\n    \"hotelId\": \"{{HotelId}}\",\r\n    \"folioWindowNo\": \"3\",\r\n    \"overrideARCreditLimit\": false\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/payments",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"payments"
							]
						},
						"description": "Use this API to post payment against the folio on each Window. There should be no balance left\n\nWindow 3 should be paid against payment Method determined in step 14a, which is invoiced to Travel Agent"
					},
					"response": []
				},
				{
					"name": "32. Checkout - Modify Reservation status to Early Departure",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"criteria\": {\r\n        \"hotelId\": \"{{HotelId}}\",\r\n        \"reservationIdList\": [\r\n            {\r\n                \"type\": \"Reservation\",\r\n                \"id\": \"{{ReservationId}}\"\r\n            }\r\n        ],\r\n        \"ignoreRateRestriction\": true,\r\n        \"postConsumedAllowanceToGuest\": true,\r\n        \"ignoreCheckOnTieredRate\": true,\r\n        \"postEarlyDeparturePenalty\": false,\r\n        \"cashierId\": \"{{CashierId}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/earlyDeparture",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"earlyDeparture"
							]
						},
						"description": "As we are testing and no End of Day Routine will be run, use this API to change the Reservation to be able checkout Early."
					},
					"response": []
				},
				{
					"name": "33. Checkout- Close Folios 1-3 windows",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"criteria\": {\r\n        \"reservationId\": {\r\n            \"idContext\": \"OPERA\",\r\n            \"id\": {{ReservationId}},\r\n            \"type\": \"Reservation\"\r\n        },\r\n        \"profileId\": {\r\n            \"idContext\": \"OPERA\",\r\n            \"id\": {{ProfileId}},\r\n            \"type\": \"Profile\"\r\n        },\r\n        \"fiscalFolioInstruction\": \"New\",\r\n        \"allFolioWindow\": false,\r\n        \"folioQueue\": {\r\n            \"generateFiscalFolio\": false\r\n        },\r\n        \"cashierId\": {{CashierId}},\r\n        \"hotelId\": \"{{HotelId}}\",\r\n        \"eventType\": \"CheckOut\",\r\n        \"folioWindowNo\": 3,\r\n        \"correction\": false,\r\n        \"debitFolio\": false\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/folios",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"folios"
							],
							"query": [
								{
									"key": null,
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Use this folio to settle the folio prior to checkout.\n\nThis API needs to be executed on all 3 windows separately as charges were on all these 3 windows.\n\nMake sure that you change the folioWindow value for each of the API calls."
					},
					"response": []
				},
				{
					"name": "34. Checkout - Posting Checkout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"reservation\": {\r\n    \"reservationIdList\": {\r\n      \"id\": {{ReservationId}},\r\n      \"type\": \"Reservation\"\r\n    },\r\n    \"stopCheckout\": false,\r\n    \"cashierId\": {{CashierId}},\r\n    \"hotelId\": \"{{HotelId}}\",\r\n    \"eventType\": \"CheckOut\",\r\n    \"autoCheckout\": false,\r\n    \"checkoutInstr\": {\r\n      \"roomStatus\": \"Dirty\",\r\n      \"ignoreWarnings\": false\r\n    }\r\n  },\r\n  \"verificationOnly\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/csh/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/checkOuts",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"csh",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"checkOuts"
							]
						},
						"description": "Use this API to post a checkout."
					},
					"response": []
				},
				{
					"name": "35. Checkout - Email copy of Invoice",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "logLevel",
								"value": "ALL",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"folioInfo\": {\r\n        \"hotelId\": \"{{HotelId}}\",\r\n        \"reservationId\": {\r\n            \"id\": \"{{ReservationId}}\",\r\n            \"type\": \"Reservation\"\r\n        },\r\n        \"folioWindowNo\": \"1\",\r\n        \"folioDate\": \"{{Currentdate}}\"\r\n    },\r\n    \"emailRecipients\": [\r\n        {\r\n            \"emailAddress\": \"{{EmailAddress}}\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/med/config/v1/folioReports/email",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"med",
								"config",
								"v1",
								"folioReports",
								"email"
							]
						},
						"description": "Send a copy of the invoice to email.\n\nSend a copy of the invoice to email. Optionally, change the emailAddress"
					},
					"response": []
				},
				{
					"name": "35a. Checkout - Get Copy of Invoice",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "x-app-key",
								"value": "{{AppKey}}",
								"type": "text"
							},
							{
								"key": "x-hotelid",
								"value": "{{HotelId}}",
								"type": "text"
							},
							{
								"key": "logLevel",
								"value": "ALL",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{HostName}}/med/config/v1/hotels/{{HotelId}}/reservations/{{ReservationId}}/folioReports?reservationIdContext=OPERA&reservationIdType=Reservation&folioWindowNo=1&folioType=BILLING&folioDate={{Currentdate}}",
							"host": [
								"{{HostName}}"
							],
							"path": [
								"med",
								"config",
								"v1",
								"hotels",
								"{{HotelId}}",
								"reservations",
								"{{ReservationId}}",
								"folioReports"
							],
							"query": [
								{
									"key": "reservationIdContext",
									"value": "OPERA"
								},
								{
									"key": "reservationIdType",
									"value": "Reservation"
								},
								{
									"key": "folioWindowNo",
									"value": "1"
								},
								{
									"key": "folioType",
									"value": "BILLING"
								},
								{
									"key": "folioDate",
									"value": "{{Currentdate}}"
								}
							]
						},
						"description": "Fetch a copy of the invoice in Base64 format. Use any public website to convert Base64 into pdf to view it, for example [Base64 Guru](https://base64.guru/converter/decode/pdf)."
					},
					"response": []
				}
			],
			"description": "Please reference [the lab](https://github.com/rb80/oracle-hospitality-integration-platform-bootcamp-customers/blob/main/implementation-use-cases-for-property.md)) for using this Postman collection."
		}
	]
}